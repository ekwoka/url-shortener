[tasks.dev]
script = "cargo watch -x clippy -x fmt -x 'nextest run'"

[tasks.dev-run]
script = "cargo watch -x clippy -x fmt -x 'nextest run' -x run"

[tasks.fmt]
script = "cargo fmt"

[tasks.tester]
script = "cargo nextest run"

[tasks.builder]
condition = { files_modified = { input = ["./Cargo.*", "./src/**/*.rs"], output = ["./target/release/url_shortener"] } }
script = "cargo build --release"
dependencies = ["clippy", "fmt", "tester"]

[tasks.builder-linux]
condition = { files_modified = { input = ["./Cargo.*", "./src/**/*.rs"], output = ["./target/x86_64-unknown-linux-gnu/release/url_shortener"] } }
script = "TARGET_CC=x86_64-unknown-linux-gnu-gcc cargo build --release --target x86_64-unknown-linux-gnu"
dependencies = ["builder"]

[tasks.builder-musl]
condition = { files_modified = { input = ["./Cargo.*", "./src/**/*.rs"], output = ["./target/x86_64-unknown-linux-musl/release/url_shortener"] } }
script = "TARGET_CC=x86_64-linux-musl-gcc cargo build --release --target x86_64-unknown-linux-musl"
dependencies = ["builder"]

[tasks.image]
script = "cpln image build --name ${CARGO_MAKE_CRATE_NAME}:${CARGO_MAKE_CRATE_VERSION}"
dependencies = ["builder-musl"]

[tasks.up]
script = "docker run --name ${CARGO_MAKE_CRATE_NAME} -p 8080:8080 thekwoka.registry.cpln.io/${CARGO_MAKE_CRATE_NAME}:${CARGO_MAKE_CRATE_VERSION}-musl"
dependencies = ["down","image"]

[tasks.down]
script = "docker rm -f ${CARGO_MAKE_CRATE_NAME}"

[tasks.start]
script = "docker start ${CARGO_MAKE_CRATE_NAME}"

[tasks.stop]
script = "docker stop ${CARGO_MAKE_CRATE_NAME}"

[tasks.push]
script = "cpln image build --name ${CARGO_MAKE_CRATE_NAME}:${CARGO_MAKE_CRATE_VERSION} --push"
dependencies = ["builder-musl"]

[tasks.deploy]
script = "cpln image build --name ${CARGO_MAKE_CRATE_NAME}:latest --push"
dependencies = ["builder-musl"]

[tasks.db-up]
script = "docker run --name surrealdb --rm --pull always -p 8000:8000 surrealdb/surrealdb:latest start --user root --pass root"

[tasks.db-down]
script = "docker rm -f surrealdb"

[tasks.cpln-create]
script = "cpln workload create --name url-shortener-preview --image //image/url-shortener:0.0.1 --port 8080 --public --gvc url-shorten --org thekwoka --type standard --cpu 2m --mem 10Mi"
